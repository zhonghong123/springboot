##This scheduler\u2019s name will be \u201cMyScheduler\u201d.
##\u5b9a\u4e49\u8c03\u5ea6\u5668\u540d\u79f0
org.quartz.scheduler.instanceName = MyScheduler
##There are 3 threads in the thread pool, which means that a maximum of 3 jobs can be run simultaneously.
##\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570\u4e3a3\uff0c\u610f\u5473\u7740\u6700\u5927\u540c\u65f6\u53ef\u4ee5\u8fd0\u884c3\u4e2a\u4efb\u52a1
org.quartz.threadPool.threadCount = 3
##All of Quartz\u2019s data, such as details of jobs and triggers, is held in memory (rather than in a database). 
##Even if you have a database and want to use it with Quartz, 
##I suggest you get Quartz working with the RamJobStore before you open up a whole new dimension by working with a database.
#RAMJobStore
org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

#JDBCJobStore
#org.quartz.impl.jdbcjobstore.JobStoreTX:\u8ba9quartz\u7ba1\u7406\u4e8b\u52a1
#org.quartz.impl.jdbcjobstore.JobStoreCMT\uff1a\u8ba9\u5e94\u7528\u6765\u7ba1\u7406\u4e8b\u52a1
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.tablePrefix = QRTZ_
org.quartz.jobStore.dataSource = myDS
##\u914d\u7f6eDataSource
org.quartz.dataSource.myDS.driver = oracle.jdbc.driver.OracleDriver
org.quartz.dataSource.myDS.URL = jdbc:oracle:thin:@10.0.1.23:1521:demodb
org.quartz.dataSource.myDS.user = myUser
org.quartz.dataSource.myDS.password = myPassword
org.quartz.dataSource.myDS.maxConnections = 30